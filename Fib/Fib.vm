// Contains a function Fib.fib that calculates and returns the nth Fibonacci number recursively
// n is supplied as an argument

// Put your code here.

function Fib.fib 0

// Push the argument n onto the stack
push argument 0

// Base case: if n == 0, return 0
push constant 0
eq
if-goto BASE_CASE_0

// Base case: if n == 1, return 1
push argument 0
push constant 1
eq
if-goto BASE_CASE_1

// Recursive case: return Fib.fib(n-1) + Fib.fib(n-2)

// Calculate n-1
push argument 0
push constant 1
sub
call Fib.fib 1

// Save the result of Fib.fib(n-1) in temp 0
pop temp 0

// Calculate n-2
push argument 0
push constant 2
sub
call Fib.fib 1

// Add the result of Fib.fib(n-2) to Fib.fib(n-1)
push temp 0
add

// Return the result
return

// Base case: return 0
label BASE_CASE_0
push constant 0
return

// Base case: return 1
label BASE_CASE_1
push constant 1
return